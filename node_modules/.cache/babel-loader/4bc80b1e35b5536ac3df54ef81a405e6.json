{"ast":null,"code":"var _jsxFileName = \"/media/rootMX18.3/home/miki/codecool/advanced/1st_TW/newpull/harry_potter_API/src/components/Professors.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { ProfessorProvider } from './ProfessorProvider';\nimport { ProfessorsContext } from './ProfessorsContext';\nconst ProfContainer = styled.div`\n  margin: 6rem auto;\n`;\n\nconst Professors = () => {\n  const [professors, setProfessors] = useContext(ProfessorsContext);\n  useEffect(() => {\n    axios.get(\"https://www.potterapi.com/v1/characters?&key=$2a$10$k64D2VOaGCBynzK6r9E4GeAZKmgXwdSWjJwFdiicclaHlo6EPJmkO\").then(res => {\n      const professorData = res.data;\n      let professorList = [];\n      professorData.filter(character => {\n        if (String(character.role).includes(\"Professor\") && String(character.school).includes(\"Hogwarts\")) {\n          professorList.push(character);\n          console.log(character.name);\n        }\n      });\n      setProfessors(professorList);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfessorProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, professors.map(prof => /*#__PURE__*/React.createElement(\"p\", {\n    key: prof.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, prof.name))));\n};\n\nexport default Professors;","map":{"version":3,"sources":["/media/rootMX18.3/home/miki/codecool/advanced/1st_TW/newpull/harry_potter_API/src/components/Professors.js"],"names":["React","useState","useEffect","useContext","styled","axios","ProfessorProvider","ProfessorsContext","ProfContainer","div","Professors","professors","setProfessors","get","then","res","professorData","data","professorList","filter","character","String","role","includes","school","push","console","log","name","map","prof","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAEA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;;CAAjC;;AAIA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,UAAU,CAACI,iBAAD,CAA9C;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFQ,GADH,CAEI,2GAFJ,EAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,YAAMC,aAAa,GAAGD,GAAG,CAACE,IAA1B;AACA,UAAIC,aAAa,GAAG,EAApB;AACAF,MAAAA,aAAa,CAACG,MAAd,CAAqBC,SAAS,IAAI;AAChC,YACEC,MAAM,CAACD,SAAS,CAACE,IAAX,CAAN,CAAuBC,QAAvB,CAAgC,WAAhC,KACAF,MAAM,CAACD,SAAS,CAACI,MAAX,CAAN,CAAyBD,QAAzB,CAAkC,UAAlC,CAFF,EAGE;AACAL,UAAAA,aAAa,CAACO,IAAd,CAAmBL,SAAnB;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACQ,IAAtB;AACD;AACF,OARD;AASAhB,MAAAA,aAAa,CAACM,aAAD,CAAb;AACD,KAjBH;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAACkB,GAAX,CAAeC,IAAI,iBAClB;AAAG,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,IAAI,CAACF,IAAvB,CADD,CADH,CADF,CADF;AASD,CAhCD;;AAiCA,eAAelB,UAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport {ProfessorProvider} from './ProfessorProvider';\nimport {ProfessorsContext} from './ProfessorsContext';\n\nconst ProfContainer = styled.div`\n  margin: 6rem auto;\n`;\n\nconst Professors = () => {\n  const [professors, setProfessors] = useContext(ProfessorsContext);\n  useEffect(() => {\n    axios\n      .get(\n        \"https://www.potterapi.com/v1/characters?&key=$2a$10$k64D2VOaGCBynzK6r9E4GeAZKmgXwdSWjJwFdiicclaHlo6EPJmkO\"\n      )\n      .then(res => {\n        const professorData = res.data;\n        let professorList = [];\n        professorData.filter(character => {\n          if (\n            String(character.role).includes(\"Professor\") &&\n            String(character.school).includes(\"Hogwarts\")\n          ) {\n            professorList.push(character);\n            console.log(character.name);\n          }\n        });\n        setProfessors(professorList);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <ProfessorProvider>\n        {professors.map(prof => (\n          <p key={prof.id}>{prof.name}</p>\n        ))}\n      </ProfessorProvider>      \n    </React.Fragment>\n  );\n};\nexport default Professors;\n"]},"metadata":{},"sourceType":"module"}